#############
### Build ###
#############

# base image
FROM node:lts as build

# set working directory
WORKDIR /app

# install and cache app dependencies
COPY package.json ./package.json
COPY yarn.lock ./yarn.lock

# Add app
RUN yarn --frozen-lockfile
COPY . .

RUN yarn run build

FROM node:lts-alpine as production

ARG NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}

WORKDIR /app

# install and cache app dependencies
COPY package.json ./package.json
COPY yarn.lock ./yarn.lock

RUN yarn install --production=true

COPY . .

COPY --from=build /app/dist ./dist

RUN ["chmod", "+x", "docker-{{cookiecutter.directory_name}}.sh"]
EXPOSE 3000
ENTRYPOINT ["./docker-{{cookiecutter.directory_name}}.sh"]
CMD ["node", "dist/apps/{{cookiecutter.directory_name}}/main"]
